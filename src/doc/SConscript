# @COPYRIGHT@
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE

Import('env')

env.Append(CPPPATH = [ '#%s' % env.Dir('.').path ])

# Build api-doc with doxygen
doxygen_ops = {
  'SRCDIR'            : env.Dir('..'),
  'PROJECT_NAME'      : 'typeout',
  'PROJECT_NUMBER'    : '0.0.1',
  'PROJECT_BRIEF'     : 'Utilities to retrieve c++ type names at runtime',
  'EXCLUDE'           : env.Dir('../test'),
  'OUTPUT_DIRECTORY'  : env.Dir('api'),
  'EXAMPLE_PATH'      : env.Dir('../examples'),
  'INCLUDE_PATH'      : env.Dir('../include'),
  'CPP_FILTER'        : env.File('#bin/doxycppfilter'),
  'RECURSIVE'         : 'YES'
}

SConscript('api/SConscript', exports = { 'env' : env, 'options' : doxygen_ops })
env.Ignore(env.Dir('.'), env.Dir('api'))
env.Alias('api-doc', env.Dir('api'))
