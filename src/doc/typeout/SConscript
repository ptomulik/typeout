# @COPYRIGHT@
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE

Import('env')

output_directory = '.'
srcdir = env.Dir('../../').srcnode()
strip_from_path =  env.Dir('#').get_abspath()
strip_from_inc_path = env.Dir('#src/include').get_abspath()
input_list = [ srcdir.get_abspath() ]
input_str = ' \\\n'.join([''] + ['"%s"' % di for di in input_list])
file_patterns_list = []
file_patterns_str = ''
# FIXME: On windows platform, we need to use '*.bat' script
cppfilter = env.File('#bin/doxycppfilter')
cppfilter_py = env.File('#bin/doxycppfilter.py')
example_path = env.Dir('#src/examples').get_abspath()
exclude = env.Dir('#src/test').get_abspath()
include_path = env.Dir('#src/include').get_abspath();
doxyfile_dict = [ 
 ('@PROJECT_NAME@',         '"typeout"'),
 ('@PROJECT_NUMBER@',       '"0.1.0"'),
 ('@PROJECT_BRIEF@',        '"Utilities to retrieve c++ type names at runtime"'),
 ('@PROJECT_LOGO@',         ''),
 ('@OUTPUT_DIRECTORY@',     '"%s"' % output_directory ),
 ('@STRIP_FROM_PATH@',      '"%s"' % strip_from_path ),
 ('@STRIP_FROM_INC_PATH@',  '"%s"' % strip_from_inc_path ),
 ('@INPUT@',                '%s'   % input_str ),
 ('@FILE_PATTERNS@',        '%s'   % file_patterns_str ),
 ('@EXCLUDE@',              '%s'   % exclude),
 ('@EXCLUDE_PATTERNS@',     ''),
 ('@EXAMPLE_PATH@',         '%s'   % example_path),
 ('@EXAMPLE_PATTERNS@',     ''),
 ('@IMAGE_PATH@',           ''),
 ('@INCLUDE_PATH@',         '%s'   % include_path),
 ('@CPPFILTER@',            '%s'   % cppfilter.get_path()),
 ('@HPPFILTER@',            '%s'   % cppfilter.get_path()),
]
doxyfile = env.Substfile(['Doxyfile'], ['Doxyfile.in'], SUBST_DICT = doxyfile_dict)

doc = env.Doxygen(doxyfile)

env.Clean(doc, env.Dir('html'))

env.Ignore('.', doc)
env.Alias('api-doc', doc)
